scalar Object
scalar DateTime
scalar URI

interface FirstInterface {
  firstInterfaceValue : String
}

interface SecondInterface {
	secondInterfaceValue : String
}

type FirstImpl implements FirstInterface {
    firstInterfaceValue : String
    firstImplId: ID!
    firstImplValue: String
}

type SecondImpl implements SecondInterface, FirstInterface {
    secondImplId: ID!
    secondImplValue: String
    secondInterfaceValue : String
    firstInterfaceValue : String
}

type Query {
  getFirstImplValues : [FirstImpl]
  getSecondImplValues : [SecondImpl]
}

schema {
    query: Query
    mutation : Mutation
}

type Mutation {
	putValInFirst(firstInterfaceValue : String, firstImplId : String, firstImplValue : String) : FirstImpl
	putValInSecondImpl(secondInterfaceValue : String, secondImplId : String, secondImplValue : String, firstInterfaceValue : String) : SecondImpl
  
}
